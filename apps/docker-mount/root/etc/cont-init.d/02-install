#!/usr/bin/with-contenv bash
# shellcheck shell=bash
#####################################
# All rights reserved.              #
# started from Zero                 #
# Docker owned dockserver           #
# Docker Maintainer dockserver      #
#####################################
#####################################
# THIS DOCKER IS UNDER LICENSE      #
# NO CUSTOMIZING IS ALLOWED         #
# NO REBRANDING IS ALLOWED          #
# NO CODE MIRRORING IS ALLOWED      #
#####################################
function log() {
     echo "[MOUNT] ${1}"
}

cat > /etc/apk/repositories << EOF; $(echo)
alpine repos#
http://dl-cdn.alpinelinux.org/alpine/edge/community/
http://dl-cdn.alpinelinux.org/alpine/edge/main/
http://dl-cdn.alpinelinux.org/alpine/edge/testing/
EOF

log "**** update system packages ****" && \
   apk --quiet --no-cache --no-progress update && \
   apk --quiet --no-cache --no-progress upgrade

apk del --quiet --no-cache nginx
rm -rf /var/cache/apk/*
rm -rf /etc/nginx/*

log "**** install build packages from packages.lock ****"
sed '/^\s*#.*$/d' /app/requirements.txt | \
   while IFS=$'\n' read -r -a myArray; do
     apk add --quiet --no-cache --no-progress ${myArray[0]}
   done

rclone_version=$(curl -sX GET "https://api.github.com/repos/rclone/rclone/releases/latest" | awk '/tag_name/{print $4;exit}' FS='[""]' | sed -e 's_^v__')
case "$(arch)" in
   x86_64)
      platform=linux-amd64
      rclone_file=rclone-v${rclone_version}-${platform}.zip
     ;;
   armv7l)
     platform=linux-armv7
     rclone_file=rclone-v${rclone_version}-linux-arm-v7.zip
     ;;
   aarch64)
     platform=linux-arm64
     rclone_file=rclone-v${rclone_version}-${platform}.zip
     ;;
   *)
     echo "[ERROR] unsupported arch $(arch), exit now"
     exit 1
     ;;
esac

apk add --quiet --no-cache --no-progress --virtual=build-dependencies aria2
aria2c -x2 -k1M -d /tmp -o rclone.zip https://downloads.rclone.org/v${rclone_version}/${rclone_file}
cd /tmp/ && unzip rclone.zip
cd /tmp/rclone-*
cp rclone /usr/local/bin/ \
  && rm -rf /tmp/rclone*
rm -rf /var/cache/apk/* /tmp/*
#EOF
