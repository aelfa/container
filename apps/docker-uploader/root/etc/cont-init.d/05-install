#!/usr/bin/with-contenv bash
# shellcheck shell=bash
#####################################
# All rights reserved.              #
# started from Zero                 #
# Docker owned dockserver           #
# Docker Maintainer dockserver      #
#####################################
#####################################
# THIS DOCKER IS UNDER LICENSE      #
# NO CUSTOMIZING IS ALLOWED         #
# NO REBRANDING IS ALLOWED          #
# NO CODE MIRRORING IS ALLOWED      #
#####################################
function log() {
     echo "${1}"
}

cat > /etc/apk/repositories << EOF; $(echo)
https://dl-cdn.alpinelinux.org/alpine/edge/main
https://dl-cdn.alpinelinux.org/alpine/edge/community
https://dl-cdn.alpinelinux.org/alpine/edge/testing
EOF

log "**** update system packages ****" && \
   apk --quiet --no-progress update && \
   apk --quiet --no-progress upgrade

log "**** install build packages from requirements ****"
sed '/^\s*#.*$/d' /app/requirements.txt | \
   while IFS=$'\n' read -r -a myArray; do
     apk add --quiet --no-progress ${myArray[0]}
   done

if [[ ! -f "/system/servicekeys/rclonegdsa.conf" ]]; then
   log "-->> [ WARNING ] ----------------------------- [ WARNING ] <<--"
   log "-->> [ WARNING ] no rclonegdsa.conf file found [ WARNING ] <<--"
   log "-->> [ WARNING ]         sleeping for 30s      [ WARNING ] <<--"
   log "-->> [ WARNING ] ----------------------------- [ WARNING ] <<--"
   sleep infinity
fi

rjson=/system/servicekeys/rclonegdsa.conf
if `rclone config show --config=${rjson} | grep "GDSA" &>/dev/null`;then
  KEY="GDSA"
elif `rclone config show --config=${rjson} | head -n1 | grep -Po '\[.*?]' | sed 's/.*\[\([^]]*\)].*/\1/' | sed '/GDSA/d'`;then
  KEY=""
else
   log "-->> [ WARNING ] ----------------- [ WARNING ] <<--"
   log "-->> [ WARNING ]  no match found   [ WARNING ] <<--"
   log "-->> [ WARNING ]  of GDSA[01=~100] [ WARNING ] <<--"
   log "-->> [ WARNING ]    or [01=~100]   [ WARNING ] <<--"
   log "-->> [ WARNING ] ----------------- [ WARNING ] <<--"
   sleep infinity
fi
####
if [[ ! -f "/root/.config/rclone/rclone.conf" ]]; then
   mkdir -p /root/.config/rclone/ && ln -s /system/servicekeys/rclonegdsa.conf /root/.config/rclone/rclone.conf
fi

rm -rf /var/cache/apk/* \
       /etc/nginx/nginx.conf

# Configure nginx
cp -r /conf/nginx.conf /etc/nginx/nginx.conf
cp -r /conf/fpm-pool.conf /etc/php8/php-fpm.d/www.conf
cp -r /conf/php.j2 /etc/php8/conf.d/custom.ini

#E-O-F#
