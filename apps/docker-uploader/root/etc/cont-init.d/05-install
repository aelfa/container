#!/usr/bin/with-contenv bash
# shellcheck shell=bash
# Copyright (c) 2020, MrDoob
# All rights reserved.
function log() {
     echo "[UPLOADER] ${1}"
}

cat > /etc/apk/repositories << EOF; $(echo)
http://dl-cdn.alpinelinux.org/alpine/v3.15/main
http://dl-cdn.alpinelinux.org/alpine/v3.15/community
http://dl-cdn.alpinelinux.org/alpine/edge/testing
EOF

log "**** update system packages ****" && \
   apk --quiet --no-cache --no-progress update && \
   apk --quiet --no-cache --no-progress upgrade


log "**** install build packages from packages.lock ****"
sed '/^\s*#.*$/d' /app/requirements.txt | \
   while IFS=$'\n' read -r -a myArray; do
     apk add --quiet --no-cache --no-progress ${myArray[0]}
   done

rclone_version=$(curl -sX GET "https://api.github.com/repos/rclone/rclone/releases/latest" | awk '/tag_name/{print $4;exit}' FS='[""]' | sed -e 's_^v__')

case "$(arch)" in
   x86_64)
      platform=linux-amd64
      rclone_file=rclone-${rclone_version}-${platform}.zip
     ;;
   armv7l)
     platform=linux-armv7
     rclone_file=rclone-${rclone_version}-linux-arm-v7.zip
     ;;
   aarch64)
     platform=linux-arm64
     rclone_file=rclone-${rclone_version}-${platform}.zip
     ;;

   *)
     echo "[ERROR] unsupported arch $(arch), exit now"
     exit 1
     ;;
esac

apk add --quiet --no-cache --no-progress --virtual=build-dependencies aria2
aria2c -x2 -k1M -d /tmp -o ${rclone_file} https://downloads.rclone.org/${rclone_version}/${rclone_file}
cd /tmp/ && unzip -q ${rclone_file} \ 
  && cd rclone-* \ 
  && cp rclone /usr/local/bin/ \
  && rm -rf /tmp/${rclone_file} \
  && rm -rf /tmp/rclone-*

if [[ ! -d "/app/language" ]]; then mkdir -p /app/language && git -C /app clone https://github.com/dockserver/language.git; fi
if [[ ! -d "/system/uploader/json/" ]];then mkdir -p /system/uploader/json/; fi
if [[ ! -d "/system/uploader/json/done/" ]];then mkdir -p /system/uploader/json/done/; fi
if [[ ! -d "/system/uploader/json/upload/" ]];then mkdir -p /system/uploader/json/upload/; fi

if [[ ! -f "/system/servicekeys/rclonegdsa.conf" ]]; then
   log "-->> [ WARNING ] ----------------------------- [ WARNING ] <<--"
   log "-->> [ WARNING ] no rclonegdsa.conf file found [ WARNING ] <<--"
   log "-->> [ WARNING ]         sleeping for 30s      [ WARNING ] <<--"
   log "-->> [ WARNING ] ----------------------------- [ WARNING ] <<--"
   sleep infinity
fi
####
JSONDIR="/system/servicekeys/keys/"
GDSAARRAY=$(ls -l ${JSONDIR} | egrep -c '(GDS|GDSA)')

if [[ ${GDSAARRAY} -lt "1" ]]; then
   log "-->> [ WARNING ] ---------------- [ WARNING ] <<--"
   log "-->> [ WARNING ]  No GDSAS found  [ WARNING ] <<--"
   log "-->> [ WARNING ] ---------------- [ WARNING ] <<--"
   sleep infinity
fi
####
if [[ ! -f "/root/.config/rclone/rclone.conf" ]]; then
   mkdir -p /root/.config/rclone/ && ln -s /system/servicekeys/rclonegdsa.conf /root/.config/rclone/rclone.conf
fi

rm -rf /var/cache/apk/* \
       /etc/nginx/nginx.conf

# Configure nginx
cp -r /conf/nginx.conf /etc/nginx/nginx.conf
cp -r /conf/fpm-pool.conf /etc/php8/php-fpm.d/www.conf
cp -r /conf/php.j2 /etc/php8/conf.d/custom.ini

#E-O-F#
